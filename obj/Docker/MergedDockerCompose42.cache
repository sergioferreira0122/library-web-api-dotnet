name: dockercompose4766360516660457190
services:
  app_db:
    container_name: app-db
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_SA_PASSWORD: G0*`_Uo415[b
    image: mcr.microsoft.com/mssql/server:2022-latest
    networks:
      library.api: null
    ports:
      - mode: ingress
        target: 1433
        published: "8002"
        protocol: tcp
    volumes:
      - type: bind
        source: C:\dados\volumes\sqlserver
        target: /var/opt/mssql/data
        bind:
          create_host_path: true
  jenkins:
    container_name: jenkins
    image: jenkins/jenkins:lts
    networks:
      library.api: null
    ports:
      - mode: ingress
        target: 8080
        published: "8080"
        protocol: tcp
    volumes:
      - type: bind
        source: C:\dados\volumes\jenkins
        target: /var/jenkins_home
        bind:
          create_host_path: true
  library.api:
    build:
      context: C:\Users\Sergio\source\repos\Library
      dockerfile: Library/Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: Library.API
    container_name: web-api-library
    depends_on:
      app_db:
        condition: service_started
        required: true
    entrypoint:
      - tail
      - -f
      - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      DB_HOST: app_db
      DB_NAME: libraryapi
      DB_SA_PASSWORD: G0*`_Uo415[b
    image: libraryapi
    labels:
      com.microsoft.visual-studio.project-name: Library.API
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages  "/app/Library.API.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      library.api: null
    ports:
      - mode: ingress
        target: 80
        protocol: tcp
      - mode: ingress
        target: 80
        published: "8001"
        protocol: tcp
    tty: true
    volumes:
      - type: bind
        source: C:\Users\Sergio\vsdbg\vs2017u5
        target: /remote_debugger
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Sergio\AppData\Roaming/ASP.NET/Https
        target: /root/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\Sergio\AppData\Roaming/Microsoft/UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\TokenService.Proxy\linux-x64\net7.0
        target: /TokenService.Proxy
        read_only: true
        bind:
          create_host_path: true
networks:
  library.api:
    name: dockercompose4766360516660457190_library.api